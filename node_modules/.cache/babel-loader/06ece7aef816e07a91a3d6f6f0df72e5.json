{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Aman\\\\Documents\\\\IPFS-EthereumDapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Aman\\\\Documents\\\\IPFS-EthereumDapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Aman\\\\Documents\\\\IPFS-EthereumDapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Aman\\\\Documents\\\\IPFS-EthereumDapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Aman\\\\Documents\\\\IPFS-EthereumDapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Aman\\\\Documents\\\\IPFS-EthereumDapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\Aman\\\\Documents\\\\IPFS-EthereumDapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Aman\\\\Documents\\\\IPFS-EthereumDapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Aman\\\\Documents\\\\IPFS-EthereumDapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Aman\\\\Documents\\\\IPFS-EthereumDapp\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react'; // import Web3 from \"web3\";\n\nimport Image from '../abis/Image.json';\nimport { convertBytes } from './helper';\nimport moment from 'moment';\nimport './App.css';\n\nvar ipfsClient = require('ipfs-api');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: '5001',\n  protocol: 'https'\n});\n\nvar Web3 = require('web3');\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, contract, filesCount, i, file;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                console.log(web3); // Load account\n\n                _context3.next = 4;\n                return web3.eth.getAccounts();\n\n              case 4:\n                accounts = _context3.sent;\n                console.log(accounts);\n                this.setState({\n                  account: accounts[0]\n                });\n                console.log(this.state.account);\n                _context3.next = 10;\n                return web3.eth.net.getId();\n\n              case 10:\n                networkId = _context3.sent;\n                networkData = Image.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 31;\n                  break;\n                }\n\n                contract = new web3.eth.Contract(Image.abi, networkData.address);\n                this.setState({\n                  contract: contract\n                });\n                _context3.next = 17;\n                return contract.methods.numberoffile().send({\n                  from: this.state.account\n                });\n\n              case 17:\n                filesCount = _context3.sent;\n                //fileCount().call()\n                console.log(filesCount);\n                this.setState({\n                  filesCount: filesCount\n                }); // Load files&sort by the newest\n\n                i = filesCount;\n\n              case 21:\n                if (!(i >= 1)) {\n                  _context3.next = 29;\n                  break;\n                }\n\n                _context3.next = 24;\n                return contract.methods.filemap(i).call();\n\n              case 24:\n                file = _context3.sent;\n                this.setState({\n                  files: [].concat(_toConsumableArray(this.state.files), [file])\n                });\n\n              case 26:\n                i--;\n                _context3.next = 21;\n                break;\n\n              case 29:\n                _context3.next = 32;\n                break;\n\n              case 31:\n                window.alert('Smart contract not deployed to detected network.');\n\n              case 32:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.captureFile = function (event) {\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          buffer: Buffer.from(reader.result),\n          type: file.type,\n          name: file.name\n        });\n\n        console.log('buffer', _this.state.buffer);\n      };\n    };\n\n    _this.onSubmitClick = function (description) {\n      console.log(\"Submitting file to IPFS...\");\n      console.log(\"Submitting File\");\n      ipfs.add(_this.state.buffer, function (error, result) {\n        console.log('IPFS result', result.size);\n\n        if (error) {\n          console.error(error);\n          return;\n        }\n\n        if (_this.state.type === '') {\n          _this.setState({\n            type: 'none'\n          });\n        }\n\n        var imageHash = result[0][\"hash\"];\n        console.log(imageHash);\n\n        _this.state.contract.methods.uploadFile(result[0].hash, result[0].size, _this.state.type, _this.state.name, description).send({\n          from: _this.state.account\n        }).on('transactionHash', function (hash) {\n          _this.setState({\n            loading: false,\n            type: null,\n            name: null\n          });\n\n          window.location.reload();\n        }).on('error', function (e) {\n          window.alert('Error');\n\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      imageHash: '',\n      contract: null,\n      web3: null,\n      buffer: null,\n      account: null,\n      type: null,\n      name: null,\n      loading: false,\n      files: []\n    };\n    _this.onSubmitClick = _this.onSubmitClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.captureFile = _this.captureFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"title\",\n        style: {\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }), \"IPFS BLOCKCHAIN APPLICATION\")), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table-sm table-bordered text-monospace\",\n        style: {\n          width: '1000px',\n          maxHeight: '450px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        style: {\n          'fontSize': '15px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"bg-dark text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        style: {\n          width: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }, \"id\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        style: {\n          width: '200px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      }, \"name\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        style: {\n          width: '230px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }\n      }, \"description\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        style: {\n          width: '120px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }\n      }, \"type\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        style: {\n          width: '90px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }, \"size\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        style: {\n          width: '90px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }\n      }, \"date\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        style: {\n          width: '120px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }\n      }, \"uploader/view\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        style: {\n          width: '120px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      }, \"hash/view/get\"))), this.state.files.map(function (file, key) {\n        return /*#__PURE__*/React.createElement(\"thead\", {\n          style: {\n            'fontSize': '12px'\n          },\n          key: key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }\n        }, file.fileId), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }\n        }, file.fileName), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }\n        }, file.fileDescription), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }\n        }, file.fileType), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }\n        }, convertBytes(file.fileSize)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }\n        }, moment.unix(file.uploadTime).format('h:mm:ss A M/D/Y')), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: \"https://etherscan.io/address/\" + file.uploader,\n          rel: \"noopener noreferrer\",\n          target: \"_blank\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 27\n          }\n        }, file.uploader.substring(0, 10), \"...\")), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: \"https://ipfs.infura.io/ipfs/\" + file.fileHash,\n          rel: \"noopener noreferrer\",\n          target: \"_blank\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 27\n          }\n        }, file.fileHash.substring(0, 10), \"...\"))));\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }\n      }, \"Change File\"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n          var description = _this2.fileDescription.value;\n\n          _this2.onSubmitClick(description);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"fileDescription\",\n        type: \"text\",\n        ref: function ref(input) {\n          _this2.fileDescription = input;\n        },\n        className: \"form-control text-monospace\",\n        placeholder: \"Description...\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 41\n        }\n      }, \"Upload!\")))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 19\n        }\n      }, \"Account : \" + this.state.account)))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Aman/Documents/IPFS-EthereumDapp/src/components/App.js"],"names":["React","Component","Image","convertBytes","moment","ipfsClient","require","ipfs","host","port","protocol","Web3","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","console","log","eth","getAccounts","accounts","setState","account","state","net","getId","networkId","networkData","networks","contract","Contract","abi","address","methods","numberoffile","send","from","filesCount","i","filemap","call","file","files","props","captureFile","event","preventDefault","target","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","type","name","onSubmitClick","description","add","error","size","imageHash","uploadFile","hash","on","loading","location","reload","e","bind","color","width","maxHeight","map","key","fileId","fileName","fileDescription","fileType","fileSize","unix","uploadTime","format","uploader","substring","fileHash","value","input"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n// import Web3 from \"web3\";\r\nimport Image from '../abis/Image.json'\r\n\r\nimport { convertBytes } from './helper';\r\nimport moment from 'moment'\r\n\r\n\r\n\r\nimport './App.css';\r\nconst ipfsClient = require('ipfs-api')\r\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: '5001', protocol: 'https' })\r\nvar Web3 = require('web3');\r\n\r\n\r\nclass App extends Component {\r\n\r\nasync componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n  }\r\n\r\nasync loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n}\r\n\r\nasync loadBlockchainData() {\r\n  const web3 = window.web3\r\n  console.log(web3)\r\n  // Load account\r\n  const accounts = await web3.eth.getAccounts()\r\n  console.log(accounts)\r\n  this.setState({ account: accounts[0] })\r\n  console.log(this.state.account)\r\n  const networkId = await web3.eth.net.getId()\r\n  const networkData = Image.networks[networkId]\r\n  if(networkData) {\r\n    const contract = new web3.eth.Contract(Image.abi, networkData.address)\r\n    this.setState({ contract })\r\n    const filesCount = await contract.methods.numberoffile().send({ from: this.state.account }) //fileCount().call()\r\n    console.log(filesCount)\r\n    this.setState({ filesCount })\r\n    // Load files&sort by the newest\r\n    for (var i = filesCount; i >= 1; i--) {\r\n      const file = await contract.methods.filemap(i).call()\r\n      this.setState({\r\n        files: [...this.state.files, file]\r\n      })\r\n    }\r\n  } else {\r\n    window.alert('Smart contract not deployed to detected network.')\r\n  }\r\n}\r\n\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      imageHash: '',\r\n      contract: null,\r\n      web3: null,\r\n      buffer: null,\r\n      account: null,\r\n      type: null,\r\n      name: null,\r\n      loading: false,\r\n      files: []\r\n    }\r\n    this.onSubmitClick = this.onSubmitClick.bind(this)\r\n    this.captureFile = this.captureFile.bind(this) \r\n\r\n  }\r\n  captureFile = (event)=>{\r\n    event.preventDefault();\r\n    const file = event.target.files[0]\r\n    const reader = new window.FileReader()\r\n    reader.readAsArrayBuffer(file)\r\n    reader.onloadend = () =>{\r\n      this.setState({\r\n        buffer: Buffer.from(reader.result),\r\n        type: file.type,\r\n        name: file.name\r\n      })\r\n      console.log('buffer',this.state.buffer)\r\n    }\r\n  }\r\n  onSubmitClick = description =>{\r\n    console.log(\"Submitting file to IPFS...\")\r\n    console.log(\"Submitting File\");\r\n    ipfs.add(this.state.buffer, (error, result) => {\r\n      console.log('IPFS result', result.size)\r\n      if(error) {\r\n        console.error(error)\r\n        return\r\n      }\r\n      if(this.state.type === ''){\r\n        this.setState({type: 'none'})\r\n      }\r\n      const imageHash = result[0][\"hash\"]\r\n      console.log(imageHash)\r\n      this.state.contract.methods.uploadFile(result[0].hash, result[0].size, this.state.type, this.state.name, description).send({ from: this.state.account }).on('transactionHash', (hash) => {\r\n        this.setState({\r\n         loading: false,\r\n         type: null,\r\n         name: null\r\n       })\r\n       window.location.reload()\r\n      }).on('error', (e) =>{\r\n        window.alert('Error')\r\n        this.setState({loading: false})\r\n      })\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n          \r\n            <p className = \"title\" style={{color:'white'}}>\r\n            <p></p>\r\n            IPFS BLOCKCHAIN APPLICATION\r\n            </p>\r\n\r\n        </nav>\r\n        <br></br>\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\r\n              <div className=\"content mr-auto ml-auto\">\r\n              \r\n              <table className=\"table-sm table-bordered text-monospace\" style={{ width: '1000px', maxHeight: '450px'}}>\r\n                <thead style={{ 'fontSize': '15px' }}>\r\n                  <tr className=\"bg-dark text-white\">\r\n                    <th scope=\"col\" style={{ width: '10px'}}>id</th>\r\n                    <th scope=\"col\" style={{ width: '200px'}}>name</th>\r\n                    <th scope=\"col\" style={{ width: '230px'}}>description</th>\r\n                    <th scope=\"col\" style={{ width: '120px'}}>type</th>\r\n                    <th scope=\"col\" style={{ width: '90px'}}>size</th>\r\n                    <th scope=\"col\" style={{ width: '90px'}}>date</th>\r\n                    <th scope=\"col\" style={{ width: '120px'}}>uploader/view</th>\r\n                    <th scope=\"col\" style={{ width: '120px'}}>hash/view/get</th>\r\n                  </tr>\r\n                </thead>\r\n                { this.state.files.map((file, key) => {\r\n                  return(\r\n                    <thead style={{ 'fontSize': '12px' }} key={key}>\r\n                      <tr>\r\n                        <td>{file.fileId}</td>\r\n                        <td>{file.fileName}</td>\r\n                        <td>{file.fileDescription}</td>\r\n                        <td>{file.fileType}</td>\r\n                        <td>{convertBytes(file.fileSize)}</td>\r\n                        <td>{moment.unix(file.uploadTime).format('h:mm:ss A M/D/Y')}\r\n                        </td>\r\n                        <td>\r\n                          <a\r\n                            href={\"https://etherscan.io/address/\" + file.uploader}\r\n                            rel=\"noopener noreferrer\"\r\n                            target=\"_blank\">\r\n                            {file.uploader.substring(0,10)}...\r\n                          </a>\r\n                        </td>\r\n                        <td>\r\n                          <a\r\n                            href={\"https://ipfs.infura.io/ipfs/\" + file.fileHash}\r\n                            rel=\"noopener noreferrer\"\r\n                            target=\"_blank\">\r\n                            {file.fileHash.substring(0,10)}...\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    </thead>\r\n                  )\r\n                })}\r\n              </table>\r\n\r\n\r\n              <div className=\"container-form\">\r\n              <h2>Change File</h2>\r\n                {/* <form>\r\n                  <input type=\"file\" onChange={this.captureFile}></input>\r\n                  <input type=\"submit\" onClick={this.onSubmitClick}></input>\r\n                </form> */}\r\n\r\n                <form onSubmit={(event) => {\r\n                  event.preventDefault()\r\n                  const description = this.fileDescription.value\r\n                  this.onSubmitClick(description)\r\n                  }} >\r\n                    <div className=\"form-group\">\r\n                      <br></br>\r\n                        <input\r\n                          id=\"fileDescription\"\r\n                          type=\"text\"\r\n                          ref={(input) => { this.fileDescription = input }}\r\n                          className=\"form-control text-monospace\" \r\n                          placeholder=\"Description...\"\r\n                          required />\r\n                    </div>\r\n                  <input type=\"file\" onChange={this.captureFile}/>\r\n                  <button type=\"submit\"><b>Upload!</b></button>\r\n                </form>\r\n\r\n                </div>\r\n                <div>\r\n                  <p></p>\r\n                  <p>\r\n                  {\"Account : \"+this.state.account}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n "]},"metadata":{},"sourceType":"module"}